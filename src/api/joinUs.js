import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Define your base URL
const baseUrl = "https://back.bridgeuni.com/api";

// Create the API slice using RTK Query
export const joinUsApi = createApi({
  reducerPath: "joinUsApi",
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      const token = localStorage.getItem("token");
      if (token) {
        headers.set("authorization", `${token}`);
      }
      return headers;
    },
  }),
  tagTypes: ['JoinUs'], // Add tag type for cache invalidation

  endpoints: (builder) => ({
    getAllJoinUsRequests: builder.query({
      query: () => ({
        url: "/joinUs",
        method: "GET",
      }),
      providesTags: ['JoinUs'], // This query provides 'JoinUs' tags
    }),
    
    deleteJoinUsRequest: builder.mutation({
      query: (id) => ({
        url: `/joinUs/${id}`,
        method: "DELETE",
      }),
      invalidatesTags: ['JoinUs'], // This mutation invalidates 'JoinUs' tags
    }),
  }),
});

// Export hooks generated by the API service
export const {
  useGetAllJoinUsRequestsQuery, // Query hook for getting all requests
  useDeleteJoinUsRequestMutation, // Mutation hook for deleting a request
} = joinUsApi;