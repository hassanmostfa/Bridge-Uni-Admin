import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Define your base URL
const baseUrl = "https://back.bridgeuni.com/api";

// Create the API slice using RTK Query
export const popularMajors = createApi({
  reducerPath: "popularMajors",
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      const token = localStorage.getItem("token");
      if (token) {
        headers.set("authorization", `${token}`);
      }
      return headers;
    },
  }),

  endpoints: (builder) => ({
    getAllMajors: builder.query({
      query: () => ({
        url: "/popularMajor", // Update this if the actual endpoint for majors is different
        method: "GET",
      }),
    }),
    getMajorById: builder.query({
      query: (id) => ({
        url: `/popularMajor/${id}`, // Update this too if needed
        method: "GET",
      }),
    }),
    addMajor: builder.mutation({
      query: (data) => ({
        url: "/popularMajor", // Update this if majors use a different endpoint
        method: "POST",
        body: data,
      }),
    }),
    updateMajor: builder.mutation({
      query: ({ id, data }) => ({
        url: `/popularMajor/${id}`,
        method: "PUT",
        body: data,
      }),
    }),
    deleteMajor: builder.mutation({
      query: (id) => ({
        url: `/popularMajor/${id}`,
        method: "DELETE",
      }),
    }),
  }),
});

// Export hooks generated by the API service
export const {
  useGetAllMajorsQuery,
  useGetMajorByIdQuery,
  useAddMajorMutation,
  useUpdateMajorMutation,
  useDeleteMajorMutation,
} = popularMajors;
