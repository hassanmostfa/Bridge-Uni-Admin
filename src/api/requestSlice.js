import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { TbPlayerEject } from "react-icons/tb";

// Define your base URL
const baseUrl = "https://back.bridgeuni.com/api";

// Create the API slice using RTK Query
export const requestApi = createApi({
  reducerPath: "requestApi",
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      // Get the token from localStorage (or Redux state)
      const token = localStorage.getItem("token");
      // If a token exists, add it to the headers
      if (token) {
        headers.set("authorization", `${token}`);
      }
      return headers;
    },
  }),

  endpoints: (builder) => ({
    getAllRequests: builder.query({
      query: (type) => "/request/"+type,
    }),
    deleteRequest: builder.mutation({
      query: ({id,type}) => ({
        url: `/request/${type}/${id}`,
        method: "DELETE",
      }),
    })
  }),
});

// Export hooks generated by the API service
export const {
  useGetAllRequestsQuery
,
  useDeleteRequestMutation
} = requestApi;
