import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Define your base URL
const baseUrl = "https://back.bridgeuni.com/api";

// Create the API slice using RTK Query
export const whyUniBridgeApi = createApi({
  reducerPath: "whyUniBridgeApi",
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      const token = localStorage.getItem("token");
      if (token) {
        headers.set("authorization", `${token}`);
      }
      return headers;
    },
  }),

  endpoints: (builder) => ({
    getAllWhyUniBridge: builder.query({
      query: () => ({
        url: "/whyUniBridge",
        method: "GET",
      }),
    }),
    getWhyUniBridgeById: builder.query({
      query: (id) => ({
        url: `/whyUniBridge/${id}`,
        method: "GET",
      }),
    }),
    addWhyUniBridge: builder.mutation({
      query: (data) => ({
        url: "/whyUniBridge",
        method: "POST",
        body: data,
      }),
    }),
    updateWhyUniBridge: builder.mutation({
      query: ({ id, data }) => ({
        url: `/whyUniBridge/${id}`,
        method: "PUT",
        body: data,
      }),
    }),
    deleteWhyUniBridge: builder.mutation({
      query: (id) => ({
        url: `/whyUniBridge/${id}`,
        method: "DELETE",
      }),
    }),
  }),
});

// Export hooks generated by the API service
export const {
  useGetAllWhyUniBridgeQuery,
  useGetWhyUniBridgeByIdQuery,
  useAddWhyUniBridgeMutation,
  useUpdateWhyUniBridgeMutation,
  useDeleteWhyUniBridgeMutation,
} = whyUniBridgeApi;
