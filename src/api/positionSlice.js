import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Define your base URL
const baseUrl = "https://back.bridgeuni.com/api";

// Create the API slice using RTK Query
export const positionsApi = createApi({
  reducerPath: "positionsApi",
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      // Get the token from localStorage (or Redux state)
      const token = localStorage.getItem("token");
      // If a token exists, add it to the headers
      if (token) {
        headers.set("authorization", `${token}`);
      }
      return headers;
    },
  }),

  endpoints: (builder) => ({
    getAllPositions: builder.query({
      query: () => '/position',
    }),
    getPosition: builder.query({
      query: (id) => '/position/' + id,
    }),
    addPosition: builder.mutation({
      query: (data) => ({
        url: "/position",
        method: "POST",
        body: data,
      }),
    }),
    updatePosition: builder.mutation({
      query: ({ id, data }) => ({
        url: `/position/${id}`,
        method: "PUT",
        body: data,
      }),
    }),
    deletePosition: builder.mutation({
      query: (id) => ({
        url: `/position/${id}`,
        method: "DELETE",
      }),
    }),
  }),
});

// Export hooks generated by the API service
export const {
  useGetAllPositionsQuery,
  useGetPositionQuery,
  useAddPositionMutation,
  useUpdatePositionMutation,
  useDeletePositionMutation
} = positionsApi;
