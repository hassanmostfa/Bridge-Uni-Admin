import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Define your base URL
const baseUrl = "https://back.bridgeuni.com/api";

// Create the API slice using RTK Query
export const privacyApi = createApi({
  reducerPath: "privacyApi",
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      // Get the token from localStorage (or Redux state)
      const token = localStorage.getItem("token");

      // If a token exists, add it to the headers
      if (token) {
        headers.set("authorization", `${token}`);
      }

      return headers;
    },
  }),

  endpoints: (builder) => ({
    getAllPrivacy: builder.query({
      query: () => '/privacyAndPolicy',
    }),
    getPrivacy: builder.query({
      query: (id) => '/privacyAndPolicy/' + id,
    }),
    addPrivacy: builder.mutation({
      query: (data) => ({
        url: "/privacyAndPolicy",
        method: "POST",
        body: data,
      }),
    }),
    updatePrivacy: builder.mutation({
      query: ({ id, data }) => ({
        url: `/privacyAndPolicy/${id}`,
        method: "PUT",
        body: data,
      }),
    }),
    deletePrivacy: builder.mutation({
      query: (id) => ({
        url: `/privacyAndPolicy/${id}`,
        method: "DELETE",
      }),
    }),
  }),
});

// Export hooks generated by the API service
export const {
  useGetAllPrivacyQuery,
  useGetPrivacyQuery,
  useAddPrivacyMutation,
  useUpdatePrivacyMutation,
  useDeletePrivacyMutation,
} = privacyApi;
