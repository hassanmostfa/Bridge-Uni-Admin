import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Define your base URL
const baseUrl = "https://back.bridgeuni.com/api";

// Create the API slice using RTK Query
export const shortCourseApi = createApi({
  reducerPath: "shortCourseApi",
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      // Get the token from localStorage (or Redux state)
      const token = localStorage.getItem("token");
      // If a token exists, add it to the headers
      if (token) {
        headers.set("authorization", `${token}`);
      }
      return headers;
    },
  }),

  endpoints: (builder) => ({
    getAllShortCources: builder.query({
      query: () => '/shortCourse',
    }),
    getShortCourse: builder.query({
      query: (id) => '/shortCourse/' + id,
    }),
    addShortCourse: builder.mutation({
      query: (data) => ({
        url: "/shortCourse",
        method: "POST",
        body: data,
      }),
    }),
    updateShortCourse: builder.mutation({
      query: ({ id, data }) => ({
        url: `/shortCourse/${id}`,
        method: "PUT",
        body: data,
      }),
    }),
    deleteShortCourse: builder.mutation({
      query: (id) => ({
        url: `/shortCourse/${id}`,
        method: "DELETE",
      }),
    }),
  }),
});

// Export hooks generated by the API service
export const {
  useGetShortCourseQuery,
  useGetAllShortCourcesQuery,
  useAddShortCourseMutation,
  useUpdateShortCourseMutation,
  useDeleteShortCourseMutation
} = shortCourseApi;
